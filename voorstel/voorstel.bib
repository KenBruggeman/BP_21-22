% Encoding: UTF-8

@Report{KoltonAndrus2021,
  author      = {Kolton Andrus, Matthew Fornaciari},
  date        = {2021},
  institution = {Gremlin},
  title       = {State of Chaos Engineering report},
  type        = {resreport},
  url         = {https://www.gremlin.com/state-of-chaos-engineering/2021/?ref=blog},
}

@Conference{Pawlikowski2020,
  author   = {Mikolaj Pawlikowski},
  date     = {2020-12-08},
  title    = {Why SREs can't afford to NOT do Chaos Engineering},
  url      = {https://www.usenix.org/conference/srecon20americas/presentation/pawlikowski},
  abstract = {Chaos Engineering is steadily transforming from a gimmick to a serious, scientific discipline focused on observing and measuring the effects of the failure in systems of all shapes and sizes, in order to verify their behavior experimentally.

Unfortunately the Internet is still full of slogans like "breaking things in production," which—while well-intentioned—can be harmful to the understanding of what Chaos Engineering is really about. In this talk, I'd like to argue that adopting Chaos Engineering can prove to be a very good investment, regardless of the nature of the system in question.

To do that, I'm going to cover three case studies: a single process, a JVM application, and a set of microservices running on Kubernetes.},
}

@Online{Izrailevsky2016,
  author = {Yury Izrailevsky, Stevan Vlaovic, Ruslan Meshenberg},
  date   = {2016-02-11},
  title  = {Completing the Netflix Cloud Migration},
  url    = {https://about.netflix.com/en/news/completing-the-netflix-cloud-migration},
}

@Comment{jabref-meta: databaseType:biblatex;}
