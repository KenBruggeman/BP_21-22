version: 1.0.0
title: Wat gebeurt er wanneer we een node drainen
description: Alle pods worden over resterende nodes verdeeld en de applicatie blijft bereikbaar
tags:
- k8s
- deployment
- node
configuration:
  node_label:
      type: env
      key: NODE_LABEL
steady-state-hypothesis:
  title: node-drain-testen
  probes:
  - name: app-responds-to-requests
    type: probe
    tolerance: 200
    provider:
      type: http
      timeout: [2,3]
      verify_tls: false
      url: http://34.121.207.30:9000/
  - name: all-pods-running
    type: probe
    tolerance: true
    provider:
      type: python
      func: pods_in_phase
      module: chaosk8s.pod.probes
      arguments:
        label_selector: app.kubernetes.io/name=podtato-head
        ns: demoapp2
method:
- type: action
  name: drain-node
  provider:
    type: python
    func: drain_nodes
    module: chaosk8s.node.actions
    arguments:
      label_selector: ${node_label}
      count: 1
      pod_namespace: demoapp2
      pod_label_selector: app.kubernetes.io/component=podtato-head-entry
      timeout: 120
      delete_pods_with_local_storage: true
  pauses:
    after: 1
rollbacks:
- type: action
  name: uncordon-node
  provider:
    type: python
    func: uncordon_node
    module: chaosk8s.node.actions
    arguments:
      label_selector: ${node_label}